---
name: Release Reports

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Optional custom tag name (leave empty for auto-generated tag)'
        required: false
        default: ''

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Create ZIP archives (JRXML only)
        run: |
          set -euo pipefail

          mkdir -p output staging

          create_zip() {
            local sample="$1"
            local zip_name="$2"
            local stage_dir="staging/${zip_name}"

            rm -rf "${stage_dir}"
            mkdir -p "${stage_dir}"

            for folder in main_reports subreports; do
              if [ -d "${sample}/${folder}" ]; then
                rsync -avm \
                  --include='*/' \
                  --include='*.jrxml' \
                  --exclude='*' \
                  "${sample}/${folder}/" "${stage_dir}/${folder}/"
              fi
            done

            if [ -z "$(find "${stage_dir}" -type f -name '*.jrxml' -print -quit)" ]; then
              echo "❌ No JRXML files found in ${sample}" >&2
              exit 1
            fi

            pushd "${stage_dir}" >/dev/null
            if [ -d main_reports ] && [ -d subreports ]; then
              zip -r "../../output/${zip_name}.zip" main_reports subreports
            elif [ -d main_reports ]; then
              zip -r "../../output/${zip_name}.zip" main_reports
            elif [ -d subreports ]; then
              zip -r "../../output/${zip_name}.zip" subreports
            else
              echo "❌ No report folders found for ${sample}" >&2
              popd >/dev/null
              exit 1
            fi
            popd >/dev/null
          }

          create_zip "DAKKS-SAMPLE" "dakks-sample"
          create_zip "ORDER-SAMPLE" "order-sample"
          create_zip "INVENTORY-SAMPLE" "inventory-sample"

      - name: Determine release metadata
        id: release_meta
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            if [ -n "${{ github.event.inputs.tag }}" ]; then
              TAG="${{ github.event.inputs.tag }}"
            else
              TAG="reports-$(date -u +'%Y%m%d-%H%M%S')"
            fi
          else
            TAG="${{ github.ref_name }}"
          fi

          NAME="Reports ${TAG}"
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "name=$NAME" >> "$GITHUB_OUTPUT"

      - name: Publish release on GitHub
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.release_meta.outputs.tag }}
          name: ${{ steps.release_meta.outputs.name }}
          target_commitish: ${{ github.sha }}
          files: output/*.zip
          generate_release_notes: true
