---
name: Package Reports

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Upload DAKKS-SAMPLE as artifact
        uses: actions/upload-artifact@v4
        with:
          name: DAKKS-SAMPLE
          path: |
            DAKKS-SAMPLE/main_reports
            DAKKS-SAMPLE/subreports
          if-no-files-found: error

      - name: Upload ORDER-SAMPLE as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ORDER-SAMPLE
          path: |
            ORDER-SAMPLE/main_reports
            ORDER-SAMPLE/subreports
          if-no-files-found: error

      - name: Upload INVENTORY-SAMPLE as artifact
        uses: actions/upload-artifact@v4
        with:
          name: INVENTORY-SAMPLE
          path: |
            INVENTORY-SAMPLE/main_reports
            INVENTORY-SAMPLE/subreports
          if-no-files-found: error

      - name: List files before zipping (Debug)
        run: |
          echo "ðŸ“‚ Inhalt von DAKKS-SAMPLE:"
          find DAKKS-SAMPLE
          echo "ðŸ“‚ Inhalt von ORDER-SAMPLE:"
          find ORDER-SAMPLE
          echo "ðŸ“‚ Inhalt von INVENTORY-SAMPLE:"
          find INVENTORY-SAMPLE

      - name: Check JasperReports version
        run: bash scripts/check_jasper_version.sh

      - name: Create ZIPs of all folders (excluding existing ZIPs)
        run: |
          mkdir -p zip_output
          zip -r zip_output/dakks-sample.zip \
            DAKKS-SAMPLE/main_reports DAKKS-SAMPLE/subreports -x "*.zip"
          zip -r zip_output/order-sample.zip \
            ORDER-SAMPLE/main_reports ORDER-SAMPLE/subreports -x "*.zip"
          zip -r zip_output/inventory-sample.zip \
            INVENTORY-SAMPLE/main_reports INVENTORY-SAMPLE/subreports -x "*.zip"

      - name: Show ZIP contents (Debug)
        run: |
          unzip -l zip_output/dakks-sample.zip
          unzip -l zip_output/order-sample.zip
          unzip -l zip_output/inventory-sample.zip

      - name: Send DAKKS-SAMPLE ZIP to API
        env:
          DOMAIN: ${{ secrets.DOMAIN }}
          HTTP_X_REST_USERNAME: ${{ secrets.HTTP_X_REST_USERNAME }}
          HTTP_X_REST_PASSWORD: ${{ secrets.HTTP_X_REST_PASSWORD }}
          HTTP_X_REST_API_KEY: ${{ secrets.HTTP_X_REST_API_KEY }}
        run: |
          REPORT_URL="https://${DOMAIN}/api/report/cd5797da-e7a9-0bc6-fc73-dedc595bd59b"
          QUERY="HTTP_X_REST_USERNAME=${HTTP_X_REST_USERNAME}&"
          QUERY+="HTTP_X_REST_PASSWORD=${HTTP_X_REST_PASSWORD}&"
          QUERY+="HTTP_X_REST_API_KEY=${HTTP_X_REST_API_KEY}"
          curl -X POST "$REPORT_URL?$QUERY" \
            -F "file=@zip_output/dakks-sample.zip"

      - name: Send ORDER-SAMPLE ZIP to API
        env:
          DOMAIN: ${{ secrets.DOMAIN }}
          HTTP_X_REST_USERNAME: ${{ secrets.HTTP_X_REST_USERNAME }}
          HTTP_X_REST_PASSWORD: ${{ secrets.HTTP_X_REST_PASSWORD }}
          HTTP_X_REST_API_KEY: ${{ secrets.HTTP_X_REST_API_KEY }}
        run: |
          REPORT_URL="https://${DOMAIN}/api/report/bbf1a0d1-8fbb-6d89-c966-156451250ef3"
          QUERY="HTTP_X_REST_USERNAME=${HTTP_X_REST_USERNAME}&"
          QUERY+="HTTP_X_REST_PASSWORD=${HTTP_X_REST_PASSWORD}&"
          QUERY+="HTTP_X_REST_API_KEY=${HTTP_X_REST_API_KEY}"
          curl -X POST "$REPORT_URL?$QUERY" \
            -F "file=@zip_output/order-sample.zip"

      - name: Send INVENTORY-SAMPLE ZIP to API
        env:
          DOMAIN: ${{ secrets.DOMAIN }}
          HTTP_X_REST_USERNAME: ${{ secrets.HTTP_X_REST_USERNAME }}
          HTTP_X_REST_PASSWORD: ${{ secrets.HTTP_X_REST_PASSWORD }}
          HTTP_X_REST_API_KEY: ${{ secrets.HTTP_X_REST_API_KEY }}
        run: |
          REPORT_URL="https://${DOMAIN}/api/report/ff64a5c7-f592-a871-5dbb-6dc24bff9bbd"
          QUERY="HTTP_X_REST_USERNAME=${HTTP_X_REST_USERNAME}&"
          QUERY+="HTTP_X_REST_PASSWORD=${HTTP_X_REST_PASSWORD}&"
          QUERY+="HTTP_X_REST_API_KEY=${HTTP_X_REST_API_KEY}"
          curl -X POST "$REPORT_URL?$QUERY" \
            -F "file=@zip_output/inventory-sample.zip"
